name: Build
on: [push]
jobs:
  server:
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repo 
        uses: actions/checkout@v2
      - name: Check
        run: |
          ./gradlew --no-daemon --console=plain check
      - name: Build
        run: |
          ./gradlew --no-daemon --console=plain server:jibDockerBuild --image=scalardev/trawler:$GITHUB_SHA
      - name: Login to Docker Hub
        # if: github.ref == 'refs/heads/master'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Push
        # if: github.ref == 'refs/heads/master'
        run: |
          ./gradlew --no-daemon --console=plain server:jib --image=scalardev/trawler:$GITHUB_SHA

  ui:
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repo 
        uses: actions/checkout@v2
      - name: Build
        run: |
          cd ui
          docker build -t scalardev/trawler-ui:$GITHUB_SHA .
      - name: Login to Docker Hub
        if: github.ref == 'refs/heads/master'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Push
        if: github.ref == 'refs/heads/master'
        run: |
          docker push scalardev/trawler-ui:$GITHUB_SHA 

  agent:
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repo 
        uses: actions/checkout@v2
      - name: Build
        run: |
          cd python
          docker build -t scalardev/trawler-agent:$GITHUB_SHA .
      - name: Login to Docker Hub
        if: github.ref == 'refs/heads/master'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Push
        if: github.ref == 'refs/heads/master'
        run: |
          docker push scalardev/trawler-agent:$GITHUB_SHA 

  deploy:
    runs-on: ubuntu-latest
    # needs:
      # - server
    steps:
      - name: Check Out Repo 
        uses: actions/checkout@v2
      - name: Install scaleway
        run: |
          curl -o scw -L "https://github.com/scaleway/scaleway-cli/releases/download/v2.3.1/scw-2.3.1-linux-x86_64"
          chmod +x scw
      - name: kubectl
        env:
          SCW_ACCESS_KEY: ${{ secrets.SCW_ACCESS_KEY }}
          SCW_SECRET_KEY: ${{ secrets.SCW_SECRET_KEY }}
          SCW_DEFAULT_ORGANIZATION_ID: ${{ secrets.SCW_ORGANIZATION_ID }}
          SCW_ZONE: fr-par-1
          TRAWLER_SECRET: ${{ secrets.TRAWLER_SECRET }}
          PGPASSWORD: ${{ secrets.TRAWLER_DB_PASSWORD }}
        run: |
          ./scw k8s kubeconfig install a1a3ab1f-497d-4b50-bf89-7ef3223368f8
          kubectl apply -k ./k8s/overlays/prod
